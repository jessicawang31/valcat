{"ast":null,"code":"var _jsxFileName = \"/Users/jessicawang/Desktop/mewtru-valentine/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [noCount, setNoCount] = useState(0);\n  const [yesPressed, setYesPressed] = useState(false);\n  const yesButtonSize = noCount * 50 + 16;\n  const handleNoClick = () => {\n    setNoCount(noCount + 1);\n  };\n  const getNoButtonText = () => {\n    const phrases = [\"No\", \"Are you sure?\", \"Really sure?\", \"Think again!\", \"Last chance!\", \"Surely not?\", \"You might regret this!\", \"Give it another thought!\", \"Are you absolutely certain?\", \"This could be a mistake!\", \"Have a heart!\", \"Don't be so cold!\", \"Change of heart?\", \"Wouldn't you reconsider?\", \"Is that your final answer?\", \"You're breaking my heart ;(\"];\n    return phrases[Math.min(noCount, phrases.length - 1)];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-screen -mt-16\",\n    children: yesPressed ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/img/cat-yes.jpg\",\n        alt: \"Valentine Request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-4xl font-bold my-4\",\n        children: \"Ok yay!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"h-[200px]\",\n        src: \"https://gifdb.com/images/high/cute-love-bear-roses-ou7zho5oosxnpo6k.gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl my-4\",\n        children: \"Will you be my Valentine?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded mr-4`,\n          style: {\n            fontSize: yesButtonSize\n          },\n          onClick: () => setYesPressed(true),\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNoClick,\n          className: \" bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\",\n          children: noCount === 0 ? \"No\" : getNoButtonText()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Y4J9E7ssw1ElZUAMn0tbwRcH0AQ=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","noCount","setNoCount","yesPressed","setYesPressed","yesButtonSize","handleNoClick","getNoButtonText","phrases","Math","min","length","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","onClick","_c","$RefreshReg$"],"sources":["/Users/jessicawang/Desktop/mewtru-valentine/src/App.js"],"sourcesContent":["\nimport { useState } from \"react\";\n\n\nexport default function App() {\n  const [noCount, setNoCount] = useState(0);\n  const [yesPressed, setYesPressed] = useState(false);\n  const yesButtonSize = noCount * 50 + 16;\n\n  const handleNoClick = () => {\n    setNoCount(noCount + 1);\n  };\n\n\n  const getNoButtonText = () => {\n    const phrases = [\n      \"No\",\n      \"Are you sure?\",\n      \"Really sure?\",\n      \"Think again!\",\n      \"Last chance!\",\n      \"Surely not?\",\n      \"You might regret this!\",\n      \"Give it another thought!\",\n      \"Are you absolutely certain?\",\n      \"This could be a mistake!\",\n      \"Have a heart!\",\n      \"Don't be so cold!\",\n      \"Change of heart?\",\n      \"Wouldn't you reconsider?\",\n      \"Is that your final answer?\",\n      \"You're breaking my heart ;(\",\n    ];\n\n    return phrases[Math.min(noCount, phrases.length - 1)];\n  };\n  \n  return (\n    <div className=\"flex flex-col items-center justify-center h-screen -mt-16\">\n    {yesPressed ? (\n      <>\n      <img src=\"/img/cat-yes.jpg\" alt=\"Valentine Request\"/>\n      <div className=\"text-4xl font-bold my-4\">Ok yay!!!</div>\n      </>\n    ) : (\n        <>\n          <img className=\"h-[200px]\" src=\"https://gifdb.com/images/high/cute-love-bear-roses-ou7zho5oosxnpo6k.gif\" />\n          <h1 className=\"text-4xl my-4\">Will you be my Valentine?</h1>\n          <div>\n            <button\n              className={`bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded mr-4`}\n              style={{ fontSize: yesButtonSize }}\n              onClick={() => setYesPressed(true)}\n            >\n              Yes\n            </button>\n            <button\n              onClick={handleNoClick}\n              className=\" bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n            >\n              {noCount === 0 ? \"No\" : getNoButtonText()}\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}